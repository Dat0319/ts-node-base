image: node:16.15.1-alpine

stages:
  - test
  - release
  # - deploy

test:
  stage: test
  script:
    - npm install
    - npm run test:coverage

release-image:
  image: docker:19
  services:
    - docker:stable-dind
  stage: release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - npm run build:production
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
# deploy:
#   stage: deploy
#   only:
#     - master
#   script:
#     - docker pull $CONTAINER_RELEASE_IMAGE
#     - docker run -d -p 3000:3000 $CONTAINER_RELEASE_IMAGE
